import { Container } from 'inversify';
import { {{authenticatorClass}} } from './{{authenticatorClass}}';

export interface {{componentName}}ContainerConfig {
  baseURL: string;
}

export class {{componentName}}Container {
  private container: Container;
  private config: {{componentName}}ContainerConfig;

  constructor(config: {{componentName}}ContainerConfig) {
    this.config = config;
    this.container = new Container();
    this.setupBindings();
  }

  private setupBindings() {
    // Basic authenticator binding
    this.container.bind<{{authenticatorClass}}>('Authenticator').to({{authenticatorClass}}).inSingletonScope();
  }

  get<T>(serviceIdentifier: string): T {
    return this.container.get<T>(serviceIdentifier);
  }

  getAuthenticator(): {{authenticatorClass}} {
    return this.get<{{authenticatorClass}}>('Authenticator');
  }
}

export function create{{componentName}}Container(config: {{componentName}}ContainerConfig): {{componentName}}Container {
  return new {{componentName}}Container(config);
}
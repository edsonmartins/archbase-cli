{{#each imports}}
{{{this}}}
{{/each}}

{{#if typescript}}
{{{interfaces}}}

interface {{componentName}}Props {
  data: {{entityName}}[];
  loading?: boolean;
  onRowClick?: (item: {{entityName}}) => void;
}
{{/if}}

const {{componentName}}{{#if typescript}}: React.FC<{{componentName}}Props>{{/if}} = ({
  data,
  loading = false,
  onRowClick
}) => {
  const columns = [
    {{#each fields}}
    {
      key: '{{name}}',
      title: '{{label}}',
      dataIndex: '{{name}}',
      {{#if sortable}}sorter: true,{{/if}}
      {{#if filterable}}filterable: true,{{/if}}
    },
    {{/each}}
  ];

  return (
    <div className="{{componentName}}">
      <div className="{{componentName}}__header">
        <h1>{{entityName}} - Lista</h1>
      </div>
      
      {{#if withFilters}}
      <ArchbaseFilterBuilder
        onFilterChange={(filters) => console.log('Filters:', filters)}
      />
      {{/if}}
      
      <ArchbaseDataTable
        columns={columns}
        dataSource={data}
        loading={loading}
        onRow={(record) => ({
          onClick: () => onRowClick?.(record)
        })}
        {{#if withPagination}}
        pagination={{
          pageSize: 20,
          showSizeChanger: true,
          showTotal: (total) => `Total de ${total} registros`
        }}
        {{/if}}
        {{#if withSorting}}sortable{{/if}}
      />
    </div>
  );
};

export default {{componentName}};
import React, { useCallback, useRef, useState } from 'react';
import {
  Button,
  Card,
  Checkbox,
  PasswordInput,
  TextInput,
  Image,
  Title,
  Text,
  FocusTrap,
  Alert,
  Stack,
  Container
} from '@mantine/core';
import { IconAlertCircle } from '@tabler/icons-react';
import { useArchbasePasswordRemember, useArchbaseForceUpdate } from 'archbase-react';
import classes from './{{componentName}}.module.css';

export interface {{componentName}}MobileViewProps {
  onAuthenticate: (username: string, password: string) => Promise<void>;
  isLoading?: boolean;
  error?: string;
}

export function {{componentName}}MobileView({ onAuthenticate, isLoading = false, error }: {{componentName}}MobileViewProps) {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const usernameRef = useRef<HTMLInputElement>(null);
  const passwordRef = useRef<HTMLInputElement>(null);
  const forceUpdate = useArchbaseForceUpdate();

  const { rememberPassword, setRememberPassword } = useArchbasePasswordRemember({
    usernameRef,
    passwordRef,
    setUsername,
    setPassword,
    forceUpdate
  });

  const handleSubmit = useCallback(async (e: React.FormEvent) => {
    e.preventDefault();
    if (!username || !password) return;
    
    try {
      await onAuthenticate(username, password);
    } catch (error) {
      // Error handling is managed by parent component
    }
  }, [username, password, onAuthenticate]);

  const handleKeyPress = useCallback((e: React.KeyboardEvent) => {
    if (e.key === 'Enter') {
      handleSubmit(e as any);
    }
  }, [handleSubmit]);

  return (
    <div className={classes.mobileWrapper}>
      <Container size="sm" className={classes.mobileContainer}>
        <Stack gap="xl" align="center">
          {{#if withBranding}}
          <div className={classes.mobileBranding}>
            <Image
              src="{{logoPath}}"
              alt="{{brandName}} Logo"
              className={classes.mobileLogo}
            />
            <Title order={1} ta="center" className={classes.mobileBrandTitle}>
              {{brandName}}
            </Title>
            <Text ta="center" c="dimmed" className={classes.mobileBrandSubtitle}>
              Sistema de Administração
            </Text>
          </div>
          {{/if}}

          <Card className={classes.mobileLoginCard} shadow="xl" padding="xl" radius="md" w="100%">
            <FocusTrap active>
              <form onSubmit={handleSubmit}>
                <Stack gap="md">
                  <div className={classes.mobileLoginHeader}>
                    <Title order={3} ta="center" className={classes.mobileLoginTitle}>
                      Fazer Login
                    </Title>
                    <Text c="dimmed" ta="center" size="sm" mt="xs">
                      Acesse sua conta
                    </Text>
                  </div>

                  {error && (
                    <Alert
                      icon={<IconAlertCircle size="1rem" />}
                      title="Erro"
                      color="red"
                      variant="light"
                      size="sm"
                    >
                      {error}
                    </Alert>
                  )}

                  <TextInput
                    ref={usernameRef}
                    label="Email"
                    placeholder="seu@email.com"
                    value={username}
                    onChange={(e) => setUsername(e.currentTarget.value)}
                    onKeyPress={handleKeyPress}
                    required
                    size="md"
                    data-autofocus
                  />

                  <PasswordInput
                    ref={passwordRef}
                    label="Senha"
                    placeholder="Sua senha"
                    value={password}
                    onChange={(e) => setPassword(e.currentTarget.value)}
                    onKeyPress={handleKeyPress}
                    required
                    size="md"
                  />

                  {{#if withPasswordRemember}}
                  <Checkbox
                    label="Lembrar senha"
                    checked={rememberPassword}
                    onChange={(event) => setRememberPassword(event.currentTarget.checked)}
                    size="sm"
                  />
                  {{/if}}

                  <Button
                    type="submit"
                    fullWidth
                    size="lg"
                    loading={isLoading}
                    disabled={!username || !password}
                    className={classes.mobileLoginButton}
                    mt="md"
                  >
                    Entrar
                  </Button>

                  {{#if hasFeature "forgot-password"}}
                  <Text ta="center" size="sm" mt="md">
                    <a href="#" className={classes.mobileForgotPassword}>
                      Esqueceu sua senha?
                    </a>
                  </Text>
                  {{/if}}
                </Stack>
              </form>
            </FocusTrap>
          </Card>
        </Stack>
      </Container>
    </div>
  );
}
import { Routes, Route } from 'react-router-dom';
import { {{componentName}}View } from './{{componentName}}View';
import { {{componentName}}UserManagementView } from './{{componentName}}UserManagementView';
import { {{componentName}}ApiTokenManagementView } from './{{componentName}}ApiTokenManagementView';
import { useArchbaseStore } from '@archbase/react';

export const {{toUpperCase componentName}}_ROUTE = '/admin/security';
export const {{toUpperCase componentName}}_USERS_ROUTE = '/admin/security/users';
export const {{toUpperCase componentName}}_API_TOKENS_ROUTE = '/admin/security/api-tokens';

export interface {{componentName}}RoutesProps {
  baseURL: string;
  {{#if hasFeature "custom-permissions"}}
  permissions?: {
    canAccessSecurity?: boolean;
    canManageUsers?: boolean;
    canManageApiTokens?: boolean;
  };
  {{/if}}
}

export function {{componentName}}Routes({ 
  baseURL,
  {{#if hasFeature "custom-permissions"}}
  permissions = {
    canAccessSecurity: true,
    canManageUsers: true,
    canManageApiTokens: true
  }
  {{/if}}
}: {{componentName}}RoutesProps) {
  const store = useArchbaseStore();

  return (
    <Routes>
      {{#if hasFeature "custom-permissions"}}
      {permissions.canAccessSecurity && (
        <Route
          path="/admin/security"
          element={
            <{{componentName}}View
              store={store}
              baseURL={baseURL}
            />
          }
        />
      )}
      {permissions.canManageUsers && (
        <Route
          path="/admin/security/users"
          element={
            <{{componentName}}UserManagementView
              store={store}
              baseURL={baseURL}
            />
          }
        />
      )}
      {permissions.canManageApiTokens && (
        <Route
          path="/admin/security/api-tokens"
          element={
            <{{componentName}}ApiTokenManagementView
              store={store}
              baseURL={baseURL}
            />
          }
        />
      )}
      {{else}}
      <Route
        path="/admin/security"
        element={
          <{{componentName}}View
            store={store}
            baseURL={baseURL}
          />
        }
      />
      <Route
        path="/admin/security/users"
        element={
          <{{componentName}}UserManagementView
            store={store}
            baseURL={baseURL}
          />
        }
      />
      <Route
        path="/admin/security/api-tokens"
        element={
          <{{componentName}}ApiTokenManagementView
            store={store}
            baseURL={baseURL}
          />
        }
      />
      {{/if}}
    </Routes>
  );
}
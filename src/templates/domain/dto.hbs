/**
 * {{dtoName}} - Data Transfer Object
 * 
 * Following powerview-admin patterns for DTO structure.
 * Generated by DomainGenerator.
 */

{{#if needsUuid}}
import { v4 as uuidv4 } from 'uuid';
{{/if}}
{{#if needsValidation}}
import { 
  IsNotEmpty,
  IsEmail,
  ValidateNested,
  IsOptional
} from 'archbase-react';
{{/if}}

{{#if hasEnums}}
{{#each enums}}
import { {{name}} } from './{{name}}';
{{/each}}
{{/if}}

{{#if hasNestedFields}}
// Import nested DTOs (update paths as needed)
{{#each fields}}
{{#if nested}}
// import { {{tsType type}} } from './{{tsType type}}';
{{/if}}
{{/each}}
{{/if}}

export class {{dtoName}} {
  {{#each fields}}
  {{#if required}}
  {{#if validation}}
  {{#if (eq validation 'email')}}
  @IsEmail({
    message: "{{validationMessage name ../entityName}} deve ser um email vÃ¡lido",
  })
  {{else}}
  @IsNotEmpty({
    message: "{{validationMessage name ../entityName}}",
  })
  {{/if}}
  {{else}}
  @IsNotEmpty({
    message: "{{validationMessage name ../entityName}}",
  })
  {{/if}}
  {{else}}
  @IsOptional()
  {{/if}}
  {{name}}: {{tsType type}};

  {{/each}}
  {{#if withFactory}}
  // New record flag
  {{newInstanceFlag}}: boolean;

  {{/if}}
  {{#if withConstructor}}
  constructor(data: any) {
    {{#each fields}}
    {{#if isArray}}
    // Handle array field: {{name}}
    if (data.{{name}}) {
      {{#if nested}}
      this.{{name}} = data.{{name}}.map(
        (item: any) => new {{tsType type}}(item)
      );
      {{else}}
      this.{{name}} = data.{{name}};
      {{/if}}
    } else {
      this.{{name}} = [];
    }
    {{else if nested}}
    // Handle nested object: {{name}}
    if (data.{{name}}) {
      this.{{name}} = new {{tsType type}}(data.{{name}});
    }
    {{else}}
    this.{{name}} = data.{{name}};
    {{/if}}
    {{/each}}
    {{#if withFactory}}
    
    this.{{newInstanceFlag}} = data.{{newInstanceFlag}} || false;
    {{/if}}
  }
  {{/if}}

  {{#if withFactory}}
  // Static factory method for new instances
  static newInstance = () => {
    return new {{dtoName}}({
      {{#if withAuditFields}}
      id: uuidv4(),
      {{/if}}
      {{newInstanceFlag}}: true
    });
  };
  {{/if}}

  {{#if withAuditFields}}
  // Audit helper methods
  isNewRecord(): boolean {
    return this.{{newInstanceFlag}} || !this.id;
  }
  {{/if}}
}
/**
 * {{entityName}} Status Values - UI Rendering Configuration
 * 
 * Following powerview-admin patterns for enum rendering in UI components.
 * Generated by DomainGenerator.
 */

import { ArchbaseItemRenderType } from '@archbase/react';
{{#each enums}}
import { {{name}} } from './{{name}}';
{{/each}}

{{#each enums}}
// Values for {{name}} enum
export const {{name}}Values: ArchbaseItemRenderType[] = [
  {{#each values}}
  {
    value: {{../name}}.{{this}},
    label: 'mentors:{{capitalizeFirst (toLowerCase this)}}',
    color: '{{#if (eq this "ATIVO")}}green{{else if (eq this "INATIVO")}}red{{else if (eq this "BLOQUEADO")}}orange{{else}}blue{{/if}}'
  }{{#unless @last}},{{/unless}}
  {{/each}}
];

{{/each}}

{{#each enums}}
// Render function for {{name}}
export const render{{name}} = (value: {{name}}): React.ReactNode => {
  const statusItem = {{name}}Values.find(item => item.value === value);
  
  if (statusItem) {
    return (
      <Badge color={statusItem.color} variant="light">
        <Text size={'0.8rem'}>{t(statusItem.label)}</Text>
      </Badge>
    );
  }
  
  return value;
};

{{/each}}
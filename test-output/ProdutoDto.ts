/**
 * ProdutoDto - Data Transfer Object
 * 
 * Following powerview-admin patterns for DTO structure.
 * Generated by DomainGenerator.
 */

import { v4 as uuidv4 } from 'uuid';
import { 
  IsNotEmpty,
  IsEmail,
  ValidateNested,
  IsOptional
} from '@archbase/react';

import { StatusProduto } from './StatusProduto';

// Import nested DTOs (update paths as needed)
// import { StatusProduto } from './StatusProduto';
// import { return } from './return';
// import { return } from './return';

export class ProdutoDto {
  @IsNotEmpty({
    message: "mentors:id produto dever ser informado",
  })
  id: string;

  @IsOptional()
  code: string;

  @IsOptional()
  version: number;

  @IsOptional()
  createEntityDate: string;

  @IsOptional()
  updateEntityDate: string;

  @IsOptional()
  createdByUser: string;

  @IsOptional()
  lastModifiedByUser: string;

  @IsOptional()
  id: string;

  @IsOptional()
  codigo: string;

  @IsOptional()
  nome: string;

  @IsOptional()
  descricao: string;

  @IsNotEmpty({
    message: "mentors:preco produto dever ser informado",
  })
  preco: number;

  @IsOptional()
  estoque: number;

  @IsNotEmpty({
    message: "mentors:statusProduto produto dever ser informado",
  })
  statusProduto: StatusProduto;

  @IsOptional()
  ativo: boolean;

  @IsOptional()
  dataCreated: string;

  @IsOptional()
  dataUpdated: string;

  @IsOptional()
  id: return;

  @IsOptional()
  codigo: return;

  // New record flag
  isNovoProduto: boolean;

  constructor(data: any) {
    this.id = data.id;
        this.code = data.code;
        this.version = data.version;
        this.createEntityDate = data.createEntityDate;
        this.updateEntityDate = data.updateEntityDate;
        this.createdByUser = data.createdByUser;
        this.lastModifiedByUser = data.lastModifiedByUser;
        this.id = data.id;
        this.codigo = data.codigo;
        this.nome = data.nome;
        this.descricao = data.descricao;
        this.preco = data.preco;
        this.estoque = data.estoque;
        // Handle nested object: statusProduto
    if (data.statusProduto) {
      this.statusProduto = new StatusProduto(data.statusProduto);
    }
    this.ativo = data.ativo;
        this.dataCreated = data.dataCreated;
        this.dataUpdated = data.dataUpdated;
        // Handle nested object: id
    if (data.id) {
      this.id = new return(data.id);
    }
    // Handle nested object: codigo
    if (data.codigo) {
      this.codigo = new return(data.codigo);
    }
    
    this.isNovoProduto = data.isNovoProduto || false;
  }

  // Static factory method for new instances
  static newInstance = () => {
    return new ProdutoDto({
      id: uuidv4(),
      isNovoProduto: true
    });
  };

  // Audit helper methods
  isNewRecord(): boolean {
    return this.isNovoProduto || !this.id;
  }
}
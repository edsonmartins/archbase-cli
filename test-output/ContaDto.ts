/**
 * ContaDto - Data Transfer Object
 * 
 * Following powerview-admin patterns for DTO structure.
 * Generated by DomainGenerator.
 */

import { v4 as uuidv4 } from 'uuid';
import { 
  IsNotEmpty,
  IsEmail,
  ValidateNested,
  IsOptional
} from '@archbase/react';

import { StatusConta } from './StatusConta';

// Import nested DTOs (update paths as needed)
// import { StatusConta } from './StatusConta';

export class ContaDto {
  @IsNotEmpty({
    message: "mentors:id conta dever ser informado",
  })
  id: string;

  @IsOptional()
  code: string;

  @IsOptional()
  version: number;

  @IsOptional()
  createEntityDate: string;

  @IsOptional()
  updateEntityDate: string;

  @IsOptional()
  createdByUser: string;

  @IsOptional()
  lastModifiedByUser: string;

  @IsOptional()
  id: string;

  @IsNotEmpty({
    message: "mentors:numero conta dever ser informado",
  })
  numero: string;

  @IsNotEmpty({
    message: "mentors:agencia conta dever ser informado",
  })
  agencia: string;

  @IsOptional()
  status: StatusConta;

  @IsOptional()
  saldo: number;

  // New record flag
  isNovoConta: boolean;

  constructor(data: any) {
    this.id = data.id;
        this.code = data.code;
        this.version = data.version;
        this.createEntityDate = data.createEntityDate;
        this.updateEntityDate = data.updateEntityDate;
        this.createdByUser = data.createdByUser;
        this.lastModifiedByUser = data.lastModifiedByUser;
        this.id = data.id;
        this.numero = data.numero;
        this.agencia = data.agencia;
        // Handle nested object: status
    if (data.status) {
      this.status = new StatusConta(data.status);
    }
    this.saldo = data.saldo;
        
    this.isNovoConta = data.isNovoConta || false;
  }

  // Static factory method for new instances
  static newInstance = () => {
    return new ContaDto({
      id: uuidv4(),
      isNovoConta: true
    });
  };

  // Audit helper methods
  isNewRecord(): boolean {
    return this.isNovoConta || !this.id;
  }
}